const core = @import("../core.zig");
const transform = @import("../transform.zig");

pub const create = core.LLVMCreatePassManager;
pub const createFunctionPassManagerForModule = core.LLVMCreateFunctionPassManagerForModule;
pub const createFunction = core.LLVMCreateFunctionPassManager;
pub const run = core.LLVMRunPassManager;
pub const initializeFunction = core.LLVMInitializeFunctionPassManager;
pub const runFunction = core.LLVMRunFunctionPassManager;
pub const finalizeFunction = core.LLVMFinalizeFunctionPassManager;
pub const dispose = core.LLVMDisposePassManager;
pub const addLowerSwitchPass = transform.LLVMAddLowerSwitchPass;
pub const addPromoteMemoryToRegisterPass = transform.LLVMAddPromoteMemoryToRegisterPass;
pub const lVMAddLoopVectorizePass = transform.LVMAddLoopVectorizePass;
pub const addSLPVectorizePass = transform.LLVMAddSLPVectorizePass;
pub const addConstantMergePass = transform.LLVMAddConstantMergePass;
pub const addMergeFunctionsPass = transform.LLVMAddMergeFunctionsPass;
pub const addCalledValuePropagationPass = transform.LLVMAddCalledValuePropagationPass;
pub const addDeadArgEliminationPass = transform.LLVMAddDeadArgEliminationPass;
pub const addFunctionAttrsPass = transform.LLVMAddFunctionAttrsPass;
pub const addFunctionInliningPass = transform.LLVMAddFunctionInliningPass;
pub const addAlwaysInlinerPass = transform.LLVMAddAlwaysInlinerPass;
pub const addGlobalDCEPass = transform.LLVMAddGlobalDCEPass;
pub const addGlobalOptimizerPass = transform.LLVMAddGlobalOptimizerPass;
pub const addIPSCCPPass = transform.LLVMAddIPSCCPPass;
pub const addInternalizePass = transform.LLVMAddInternalizePass;
pub const addStripDeadPrototypesPass = transform.LLVMAddStripDeadPrototypesPass;
pub const addStripSymbolsPass = transform.LLVMAddStripSymbolsPass;
