const analysis = @import("../analysis.zig");
const bitwriter = @import("../bitwriter.zig");
const core = @import("../core.zig");
const debuginfo = @import("../debuginfo.zig");
const linker = @import("../linker.zig");
const target = @import("../target.zig");
pub const verify = analysis.LLVMVerifyModule;
pub const writeBitcodeToFile = bitwriter.LLVMWriteBitcodeToFile;
pub const writeBitcodeToFD = bitwriter.LLVMWriteBitcodeToFD;
pub const writeBitcodeToFileHandle = bitwriter.LLVMWriteBitcodeToFileHandle;
pub const writeBitcodeToMemoryBuffer = bitwriter.LLVMWriteBitcodeToMemoryBuffer;
pub const moduleCreateWithName = core.LLVMModuleCreateWithName;
pub const moduleCreateWithNameInContext = core.LLVMModuleCreateWithNameInContext;
pub const clone = core.LLVMCloneModule;
pub const dispose = core.LLVMDisposeModule;
pub const getModuleIdentifier = core.LLVMGetModuleIdentifier;
pub const setModuleIdentifier = core.LLVMSetModuleIdentifier;
pub const getSourceFileName = core.LLVMGetSourceFileName;
pub const setSourceFileName = core.LLVMSetSourceFileName;
pub const getDataLayoutStr = core.LLVMGetDataLayoutStr;
pub const getDataLayout = core.LLVMGetDataLayout;
pub const setDataLayout = core.LLVMSetDataLayout;
pub const getTarget = core.LLVMGetTarget;
pub const setTarget = core.LLVMSetTarget;
pub const copyModuleFlagsMetadata = core.LLVMCopyModuleFlagsMetadata;
pub const getModuleFlag = core.LLVMGetModuleFlag;
pub const addModuleFlag = core.LLVMAddModuleFlag;
pub const dump = core.LLVMDumpModule;
pub const printModuleToFile = core.LLVMPrintModuleToFile;
pub const printModuleToString = core.LLVMPrintModuleToString;
pub const getModuleInlineAsm = core.LLVMGetModuleInlineAsm;
pub const setModuleInlineAsm2 = core.LLVMSetModuleInlineAsm2;
pub const appendModuleInlineAsm = core.LLVMAppendModuleInlineAsm;
pub const getModuleContext = core.LLVMGetModuleContext;
pub const getTypeByName = core.LLVMGetTypeByName;
pub const getFirstNamedMetadata = core.LLVMGetFirstNamedMetadata;
pub const getLastNamedMetadata = core.LLVMGetLastNamedMetadata;
pub const getNamedMetadata = core.LLVMGetNamedMetadata;
pub const getOrInsertNamedMetadata = core.LLVMGetOrInsertNamedMetadata;
pub const getNamedMetadataNumOperands = core.LLVMGetNamedMetadataNumOperands;
pub const getNamedMetadataOperands = core.LLVMGetNamedMetadataOperands;
pub const addNamedMetadataOperand = core.LLVMAddNamedMetadataOperand;
pub const addFunction = core.LLVMAddFunction;
pub const getNamedFunction = core.LLVMGetNamedFunction;
pub const getFirstFunction = core.LLVMGetFirstFunction;
pub const getLastFunction = core.LLVMGetLastFunction;
pub const setModuleInlineAsm = core.LLVMSetModuleInlineAsm;
pub const addGlobal = core.LLVMAddGlobal;
pub const addGlobalInAddressSpace = core.LLVMAddGlobalInAddressSpace;
pub const getNamedGlobal = core.LLVMGetNamedGlobal;
pub const getFirstGlobal = core.LLVMGetFirstGlobal;
pub const getLastGlobal = core.LLVMGetLastGlobal;
pub const addAlias2 = core.LLVMAddAlias2;
pub const getNamedGlobalAlias = core.LLVMGetNamedGlobalAlias;
pub const getFirstGlobalAlias = core.LLVMGetFirstGlobalAlias;
pub const getLastGlobalAlias = core.LLVMGetLastGlobalAlias;
pub const getIntrinsicDeclaration = core.LLVMGetIntrinsicDeclaration;
pub const intrinsicCopyOverloadedName2 = core.LLVMIntrinsicCopyOverloadedName2;
pub const addGlobalIFunc = core.LLVMAddGlobalIFunc;
pub const getNamedGlobalIFunc = core.LLVMGetNamedGlobalIFunc;
pub const getFirstGlobalIFunc = core.LLVMGetFirstGlobalIFunc;
pub const getLastGlobalIFunc = core.LLVMGetLastGlobalIFunc;
pub const getModuleDebugMetadataVersion = debuginfo.LLVMGetModuleDebugMetadataVersion;
pub const stripModuleDebugInfo = debuginfo.LLVMStripModuleDebugInfo;
pub const linkModules2 = linker.LLVMLinkModules2;
pub const getModuleDataLayout = target.LLVMGetModuleDataLayout;
pub const setModuleDataLayout = target.LLVMSetModuleDataLayout;
